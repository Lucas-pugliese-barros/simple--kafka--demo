name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

# A workflow run is made up of jobs that can run sequentially or in parallel
jobs:
  # Job for running unit tests
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # Updated to Java 21
          distribution: 'temurin' # AdoptOpenJDK/Temurin distribution

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Run unit tests
      - name: Run Unit Tests
        run: |
          cd kafka-producer
          mvn test -DskipITs
          cd ../kafka-consumer
          mvn test -DskipITs

  # Job for running integration tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests # Runs after unit-tests job succeeds
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # Updated to Java 21
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Start Kafka (using a simple Docker container for testing)
      - name: Start Kafka
        run: |
          docker run -d -p 9092:9092 --name kafka confluentinc/cp-kafka:latest
          sleep 10 # Wait for Kafka to start

      # Run integration tests
      - name: Run Integration Tests
        run: |
          cd kafka-producer
          mvn verify -DskipTests # Skips unit tests, runs integration tests
          cd ../kafka-consumer
          mvn verify -DskipTests

  # Job for building the project (optional, after tests pass)
  build:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests] # Runs after both test jobs succeed
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # Updated to Java 21
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project
      - name: Build with Maven
        run: |
          cd kafka-producer
          mvn package -DskipTests
          cd ../kafka-consumer
          mvn package -DskipTests